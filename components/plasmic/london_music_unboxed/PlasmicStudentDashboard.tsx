/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 43GLDCvnvwFaSntiZWsgtz
// Component: SDxc98dGIuBp

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import StudentPageLayout from "../../StudentPageLayout"; // plasmic-import: Itd9tHC_WCDz/component
import Button from "../../Button"; // plasmic-import: jI-x_NzEFX2Q/component
import CourseGrid from "../../CourseGrid"; // plasmic-import: xmK9OAIpqo06/component
import GeneralResourceCard from "../../GeneralResourceCard"; // plasmic-import: aJ1uzNYjouuX/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 43GLDCvnvwFaSntiZWsgtz/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 43GLDCvnvwFaSntiZWsgtz/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 43GLDCvnvwFaSntiZWsgtz/projectcss
import sty from "./PlasmicStudentDashboard.module.css"; // plasmic-import: SDxc98dGIuBp/css

import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: IG49PCNfzFCB/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: jkQ1pOWd7e68/icon
import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: 0fflnDuvI7c1/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: IuQNgVybgFcd/icon
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: yZz0P1JDPQwS/icon
import IconIcon from "../plasmic_tabs/icons/PlasmicIcon__Icon"; // plasmic-import: 8K40faRNhuCj/icon

createPlasmicElementProxy;

export type PlasmicStudentDashboard__VariantMembers = {};
export type PlasmicStudentDashboard__VariantsArgs = {};
type VariantPropType = keyof PlasmicStudentDashboard__VariantsArgs;
export const PlasmicStudentDashboard__VariantProps =
  new Array<VariantPropType>();

export type PlasmicStudentDashboard__ArgsType = {};
type ArgPropType = keyof PlasmicStudentDashboard__ArgsType;
export const PlasmicStudentDashboard__ArgProps = new Array<ArgPropType>();

export type PlasmicStudentDashboard__OverridesType = {
  root?: Flex__<typeof StudentPageLayout>;
  courseGrid?: Flex__<typeof CourseGrid>;
};

export interface DefaultStudentDashboardProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicStudentDashboard__RenderFunc(props: {
  variants: PlasmicStudentDashboard__VariantsArgs;
  args: PlasmicStudentDashboard__ArgsType;
  overrides: PlasmicStudentDashboard__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <StudentPageLayout
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames("__wab_instance", sty.root)}
        >
          <DataCtxReader__>
            {$ctx => (
              <div className={classNames(projectcss.all, sty.freeBox__vbxqw)}>
                <div className={classNames(projectcss.all, sty.columns__nPpFp)}>
                  <div
                    className={classNames(projectcss.all, sty.column___3IuO0)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bEwod)}
                    >
                      <Icon15Icon
                        className={classNames(projectcss.all, sty.svg__ftgZm)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pf6L4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hgCiB
                          )}
                        >
                          {"21"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kP8U
                          )}
                        >
                          {"Enrolled Courses"}
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__c40Ub)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__z2Nnr)}
                    >
                      <Icon11Icon
                        className={classNames(projectcss.all, sty.svg__ommXe)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oySxY
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__s2Gu
                          )}
                        >
                          {"Enter some text"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__znzd9
                          )}
                        >
                          {"Completed Courses"}
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className={classNames(projectcss.all, sty.column__oIoN)}>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__s96Ds)}
                    >
                      <Icon16Icon
                        className={classNames(projectcss.all, sty.svg__lArwM)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zpNhW
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__evQpE
                          )}
                        >
                          {"Enter some text"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yHvXn
                          )}
                        >
                          {"Active Courses"}
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__i943Y)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__o6S0B)}
                    >
                      <Icon13Icon
                        className={classNames(projectcss.all, sty.svg__iyGfj)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2EL5R
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4HjK
                          )}
                        >
                          {"Enter some text"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xwRgg
                          )}
                        >
                          {"Instructors"}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___5NWzE)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5OCsR)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__hGnzh
                      )}
                    >
                      {"Let's start learning"}
                    </h4>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___2D32L
                      )}
                      end={
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__f2Maf)}
                          role={"img"}
                        />
                      }
                      iconEnd={true}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pJg3O
                          )}
                        >
                          {"See more"}
                        </div>
                      }
                      linkTo={`/student-courses`}
                      type={"bordered"}
                    />
                  </div>
                  <CourseGrid
                    data-plasmic-name={"courseGrid"}
                    data-plasmic-override={overrides.courseGrid}
                    className={classNames("__wab_instance", sty.courseGrid)}
                    courseList={(() => {
                      try {
                        return $ctx.allAvailableCourses;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                    maximumItemCount={4}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___929Bj)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jEkaY)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__r9K3M
                      )}
                    >
                      {"Explore more resources"}
                    </h4>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__hP4FX
                      )}
                      end={
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__svux5)}
                          role={"img"}
                        />
                      }
                      iconEnd={true}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mZ0S
                          )}
                        >
                          {"See more"}
                        </div>
                      }
                      linkTo={`/student-hub`}
                      type={"bordered"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.columns__elwHm)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__dTZq)}
                    >
                      <GeneralResourceCard
                        className={classNames(
                          "__wab_instance",
                          sty.generalResourceCard__fUtp
                        )}
                        showTags={true}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__nwG7D)}
                    >
                      <GeneralResourceCard
                        className={classNames(
                          "__wab_instance",
                          sty.generalResourceCard___6Hzz5
                        )}
                        showTags={true}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__s75D4)}
                    >
                      <GeneralResourceCard
                        className={classNames(
                          "__wab_instance",
                          sty.generalResourceCard__jqeun
                        )}
                        showTags={true}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__nr92E)}
                    >
                      <GeneralResourceCard
                        className={classNames(
                          "__wab_instance",
                          sty.generalResourceCard__nVFkM
                        )}
                        showTags={true}
                      />
                    </div>
                  </div>
                </div>
              </div>
            )}
          </DataCtxReader__>
        </StudentPageLayout>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "courseGrid"],
  courseGrid: ["courseGrid"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: typeof StudentPageLayout;
  courseGrid: typeof CourseGrid;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicStudentDashboard__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicStudentDashboard__VariantsArgs;
    args?: PlasmicStudentDashboard__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicStudentDashboard__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicStudentDashboard__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicStudentDashboard__ArgProps,
          internalVariantPropNames: PlasmicStudentDashboard__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicStudentDashboard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicStudentDashboard";
  } else {
    func.displayName = `PlasmicStudentDashboard.${nodeName}`;
  }
  return func;
}

export const PlasmicStudentDashboard = Object.assign(
  // Top-level PlasmicStudentDashboard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    courseGrid: makeNodeComponent("courseGrid"),

    // Metadata about props expected for PlasmicStudentDashboard
    internalVariantProps: PlasmicStudentDashboard__VariantProps,
    internalArgProps: PlasmicStudentDashboard__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicStudentDashboard;
/* prettier-ignore-end */
